#!/usr/bin/python3
"""
Dynamic reconfigure definition for our minimum sobolev norm
"""
from dynamic_reconfigure.parameter_generator_catkin import ParameterGenerator
from dynamic_reconfigure.parameter_generator_catkin import double_t, int_t


def _level():
    """steadily increases to provide level value"""
    start = 0
    while True:
        yield start
        start += 1


GENERATOR = _level()


def level():
    """Converts generator into a integer"""
    return next(GENERATOR)


PACKAGE = "opstop_ros"


GEN = ParameterGenerator()


SMOOTHNESS_MEASURE = GEN.enum([
    GEN.const('jerk_l2_max', int_t, 0,
              'Maximum increase in the jerk'),
    GEN.const('acceleration_max', int_t, 1,
              'Maximum increase in the acceleration')],
    "Smoothness measures for optimization limit")


GEN.add('optimization_window_milliseconds', int_t, level(),
        'Time window to perform the optimization in milliseconds',
        300, 1, 1000)

GEN.add('network_window_milliseconds', int_t, level(),
        'Expected Network delay time in milliseconds', 100, 1, 200)


GEN.add('nglp', int_t, level(),
        'Number of Gass-Lobatto points used to calculations', 3, 2, 12)


SMOOTHNESS_GROUP = GEN.add_group('Smoothness measure limit')
SMOOTHNESS_GROUP.add('alpha', double_t, level(),
                     ('Ration of the maximum allowed '
                      'increment of the smoothness measure'), 2.0, 1.0, 10.0)

SMOOTHNESS_GROUP.add('smoothness_measure', int_t, level(),
                     'Smoothness measure used for the optimization',
                     0, edit_method=SMOOTHNESS_MEASURE)

exit(GEN.generate(PACKAGE, PACKAGE,
                  "FollowJointTrajectoryActionWrapperDynamicReconfigure"))
